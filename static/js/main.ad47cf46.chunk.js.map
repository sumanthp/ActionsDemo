{"version":3,"sources":["logo.svg","appStyles.module.css","components/Message.js","components/Welcome.js","components/Counter.js","components/ClassClick.js","components/FunctionClick.js","components/EventBind.js","components/ChildComponent.js","components/ParentComponent.js","components/UserGreeting.js","components/Form.js","components/Lifecycle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Message","Component","state","message","this","setState","onClick","changeMessage","FunctionClick","ChildComponent","props","greetHandler","App","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,kC,6HCC3CD,EAAOC,QAAU,CAAC,MAAQ,2B,oIC0BXC,GCtBOC,Y,kDDDlB,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,QAAU,2BAHL,E,4DAOTC,KAAKC,SAAS,CACVF,QAAS,6B,+BAGR,IAAD,OACJ,OACI,6BACI,4BACEC,KAAKF,MAAMC,SAEb,4BAAQG,QAAS,kBAAI,EAAKC,kBAA1B,qB,GAlBMN,cEDOA,YCAJA,YCaVO,I,OCbSP,YCUTQ,MAVf,SAAwBC,GACpB,OACI,6BAGI,4BAAQJ,QAAS,kBAAMI,EAAMC,aAAa,WAA1C,kBCJyBV,YCDVA,Y,kBCARA,YCAKA,YCmETW,MA9Cf,WACE,OACE,yBAAKC,UAAU,OAyBb,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,kBC5CYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMlC,c","file":"static/js/main.ad47cf46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"appStyles_error__JICKs\"};","//using State\r\n\r\nimport React, { Component } from 'react'\r\nclass Message extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            message : 'Welcome to Github Pages'\r\n        }\r\n    }\r\n    changeMessage(){\r\n        this.setState({\r\n            message: 'Thank you for Visiting'\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>\r\n                { this.state.message }\r\n                </h1>\r\n                <button onClick={()=>this.changeMessage()}>Show Message</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","//Class Component\r\nimport React from 'react'\r\nimport {Component} from 'react'\r\n\r\n\r\nclass Welcome extends Component{\r\n    render(){\r\n    return <h1>Welcome Class  {this.props.name}</h1>\r\n    }\r\n}\r\n\r\nexport default Welcome","import React, { Component } from 'react'\r\n\r\nexport class Counter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             count: 0\r\n        }\r\n    }\r\n\r\n    increment(){\r\n        //this.state.count += 1\r\n        // this.setState(\r\n        // {\r\n        //     count: this.state.count + 1,\r\n        // },\r\n        // () => {\r\n        //         console.log('Callback value', this.state.count)\r\n        //     }\r\n        // )\r\n        this.setState((prevState, props) => ({\r\n            count: prevState.count + 1\r\n        }))\r\n        console.log(this.state.count);\r\n    }\r\n\r\n    incrementFive(){\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    count - {this.state.count}\r\n                </div>\r\n                <button onClick={() => this.incrementFive()}>\r\n                    Increment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassClick extends Component {\r\n    clickHandler(){\r\n        console.log('Clicked the button')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.clickHandler}>\\\r\n                Click Me\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassClick\r\n","import React from 'react'\r\n\r\nfunction FunctionClick() {\r\n\r\n    function clickHandler(){\r\n        console.log('Button Clicked')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={clickHandler}>Click</button>\r\n        </div>\r\n     )\r\n}\r\n\r\nexport default FunctionClick\r\n","import React, { Component } from 'react'\r\n\r\nclass EventBind extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             message: 'Hello'\r\n        }\r\n        //binding in constructor\r\n        // this.clickHandler = this.clickHandler.bind(this)\r\n    }\r\n\r\n    //this is undefined in click HANDLER FOR A EVENT\r\n    // clickHandler(){\r\n    //     this.setState({\r\n    //         message: 'Goodbyye!'\r\n    //     })\r\n    //     console.log(this)\r\n    // }\r\n\r\n    //binding using arrow functions for class properties\r\n    clickHandler = () => {\r\n        this.setState({\r\n            message: 'Goodbyye!'\r\n        })\r\n        console.log(this)\r\n    }\r\n    \r\n    render() {\r\n        //bind this to click Handler\r\n        return (\r\n            <div>\r\n                <div>{this.state.message}</div>\r\n                {/* binding in constructor -> performance issues, on every click, bibding happens  */}\r\n                {/* <button onClick={this.clickHandler.bind(this)}> */}\r\n                {/* binding to arrow fucntio n */}\r\n                {/* <button onClick={() => this.clickHandler()}> */}\r\n                <button onClick={this.clickHandler}>\r\n                    Click\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventBind\r\n","import React from 'react'\r\n\r\nfunction ChildComponent(props) {\r\n    return (\r\n        <div>\r\n            {/* <button onClick={props.greetHandler}>Greet Parent</button> */}\r\n            {/* //pass props to parent using arrow function */}\r\n            <button onClick={() => props.greetHandler('child')}>Greet Parent</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChildComponent\r\n","import React, { Component } from 'react'\r\nimport ChildComponent from './ChildComponent'\r\n\r\nexport class ParentComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             parentName: \"parent\"\r\n        }\r\n\r\n        this.greetParent = this.greetParent.bind(this)\r\n    }\r\n\r\n    greetParent(childName){\r\n        //backticks is feature of ES6\r\n        alert(`Hello ${this.state.parentName} from ${childName}`)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ChildComponent greetHandler={this.greetParent}></ChildComponent>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParentComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass UserGreeting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             isLoggedIn: false\r\n        }\r\n    }\r\n    //conditional Logging\r\n    render() {\r\n\r\n        //short circuit operation\r\n        return this.state.isLoggedIn &&  <div>Welcome Sumanth!!!</div>\r\n        //ternanry operation\r\n        // return (\r\n        //     this.state.isLoggedIn ?\r\n        //     <div>Welcome Sumanth</div> :\r\n        //     <div>Welcome Guest</div>\r\n        // )\r\n\r\n        //js variable approach\r\n        // let message\r\n        // if(this.state.isLoggedIn){\r\n        //         message = <div>Welcome Sumanth</div>\r\n        // }else{\r\n        //         message = <div>Welcome Guest</div>\r\n        // }\r\n        // return <div>{message}</div>\r\n\r\n        //if else approach\r\n        // if(this.state.isLoggedIn){\r\n        //     return (\r\n        //         <div>Welcome Sumanth</div>\r\n        //     )\r\n        // }else{\r\n        //     return (\r\n        //         <div>Welcome Guest</div>\r\n        //     )\r\n        // }\r\n        // return (\r\n        //     <div>\r\n        //         <div>\r\n        //             Welcome Sumanth!!!\r\n        //         </div>\r\n        //         <div>\r\n        //             Welcome Guest\r\n        //         </div>\r\n        //     </div>\r\n\r\n        // )\r\n    }\r\n}\r\n\r\nexport default UserGreeting\r\n","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             username: '',\r\n             comments: '',\r\n             topic: 'react'\r\n        }\r\n    }\r\n    \r\n    handleUsernameChange = (event) =>{\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleComments = (event) => {\r\n        this.setState({\r\n            comments: event.target.value\r\n        })\r\n    }\r\n\r\n    handleOptions = (event) => {\r\n        this.setState({\r\n            topic: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        alert(`${this.state.username} ${this.state.comments} ${this.state.topic}`)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <label>Username</label>\r\n                    <input type='text' \r\n                    value={this.state.username} \r\n                    onChange={this.handleUsernameChange}/>\r\n                </div>\r\n                <div>\r\n                    <label>Comments</label>\r\n                    <textarea value={this.state.comments}\r\n                    onChange={this.handleComments}>\r\n                    </textarea>\r\n                </div>\r\n                <div>\r\n                    <label>Topic</label>\r\n                    <select value={this.state.topic} onChange={this.handleOptions}>\r\n                        <option value='react'>React</option>\r\n                        <option value='angular'>Angular</option>\r\n                        <option value='vue'>Vue</option>\r\n                    </select>\r\n                </div>\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n//Lifecycle Methods\r\n//\r\nexport default Form\r\n","import React, { Component } from 'react'\r\n\r\nclass Lifecycle extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name: 'Sumanth'\r\n        }\r\n        console.log('Constructor')\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        console.log('GetDerivedState')\r\n        return null\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('Component Mounted')\r\n    }\r\n    \r\n    render() {\r\n        console.log('Render')\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lifecycle\r\n","import React, { Fragment } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import Greet from './components/Greet'\nimport Custom from './components/Greet'\nimport Welcome from './components/Welcome'\nimport Hello from './components/Hello'\nimport Message from './components/Message'\nimport Counter from './components/Counter'\nimport FunctionClick from './components/FunctionClick';\nimport ClassClick from './components/ClassClick';\nimport EventBind from './components/EventBind';\nimport ParentComponent from './components/ParentComponent';\nimport UserGreeting from './components/UserGreeting'\nimport NameList from './components/NameList'\nimport StyleSheet from './components/StyleSheet'\nimport Inline from './components/Inline';\nimport './appStyles.css'\nimport styles from './appStyles.module.css'\nimport Form from './components/Form';\nimport Lifecycle from './components/Lifecycle';\nimport FragmentDemo from './components/FragmentDemo';\nimport Table from './components/Table';\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Greet name=\"Sumanth\"></Greet>\n      <Greet name=\"Ultron\"></Greet>\n      <Greet name=\"Harry\"></Greet>\n      <div className='success'>Success</div>\n      <div className={styles.error}>Success</div>\n      <Custom name=\"Sumanth\" hero='Batman'><p>Human Being</p></Custom>\n      <Custom name=\"Ultron\" hero='villain'></Custom>\n      <Custom name=\"Harry\" hero='wizard'></Custom>\n      <Welcome name=\"Sumanth\"></Welcome>\n      <Welcome name=\"Ultron\"></Welcome>\n      <ParentComponent></ParentComponent>\n      <UserGreeting></UserGreeting>\n      <Hello></Hello>\n      <Counter></Counter>\n      <EventBind></EventBind>\n      <FunctionClick></FunctionClick>\n      <ClassClick></ClassClick>\n      <NameList></NameList>\n      <Inline></Inline> \n      <Form></Form>\n    <Lifecycle></Lifecycle>\n     <FragmentDemo></FragmentDemo> \n    <Table></Table>\n      <StyleSheet primary={false}></StyleSheet> */}\n      <Message/>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}